# Generated by Django 3.2.4 on 2021-11-04 14:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caseName', models.CharField(max_length=64, verbose_name='用例名称')),
            ],
        ),
        migrations.CreateModel(
            name='ApiCaseStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.IntegerField(default=1, verbose_name='执行顺序')),
                ('ApiCase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.apicase', verbose_name='测试用例')),
            ],
        ),
        migrations.CreateModel(
            name='CookieTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('templateName', models.CharField(max_length=64, verbose_name='Cookie模板名称')),
                ('templateDesc', models.CharField(blank=True, max_length=200, null=True, verbose_name='Cookie模板描述')),
            ],
            options={
                'verbose_name': 'Cookie信息模板',
                'verbose_name_plural': 'Cookie信息模板',
            },
        ),
        migrations.CreateModel(
            name='DdtData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ApiCase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.apicase', verbose_name='测试用例')),
            ],
            options={
                'verbose_name': '数据驱动',
                'verbose_name_plural': '数据驱动',
            },
        ),
        migrations.CreateModel(
            name='Env',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('envcode', models.CharField(max_length=64, verbose_name='环境')),
                ('remark', models.CharField(blank=True, max_length=200, null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '环境',
                'verbose_name_plural': '环境',
            },
        ),
        migrations.CreateModel(
            name='HeaderTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('templateName', models.CharField(max_length=64, verbose_name='模板名称')),
                ('templateDesc', models.CharField(blank=True, max_length=200, null=True, verbose_name='模板描述')),
            ],
            options={
                'verbose_name': '请求头模板',
                'verbose_name_plural': '请求头模板',
            },
        ),
        migrations.CreateModel(
            name='HttpRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apiName', models.CharField(max_length=128, null=True, verbose_name='接口名称')),
                ('method', models.CharField(choices=[('POST', 'POST'), ('GET', 'GET'), ('PUT', 'PUT'), ('DELETE', 'DELETE')], max_length=128, verbose_name='请求类型')),
                ('bodyType', models.CharField(blank=True, choices=[('JSON', 'json格式数据'), ('DATA', '普通键值对')], max_length=128, null=True, verbose_name='Post参数类型(可选)')),
                ('url', models.CharField(max_length=2048, null=True, verbose_name='完整URL地址')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('CookieTemplate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.cookietemplate', verbose_name='Cookie信息')),
                ('HeaderTemplate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.headertemplate', verbose_name='请求头')),
            ],
            options={
                'verbose_name': '接口信息',
                'verbose_name_plural': '接口信息',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productName', models.CharField(max_length=64, verbose_name='项目名称')),
                ('productDesc', models.CharField(blank=True, max_length=200, null=True, verbose_name='项目描述')),
                ('producter', models.CharField(blank=True, max_length=200, null=True, verbose_name='项目负责人')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '项目管理',
                'verbose_name_plural': '项目管理',
            },
        ),
        migrations.CreateModel(
            name='RequestBodyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, verbose_name='参数名')),
                ('value', models.CharField(max_length=4096, verbose_name='参数值')),
                ('HttpRequest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.httprequest', verbose_name='请求')),
            ],
            options={
                'verbose_name': 'Body参数',
                'verbose_name_plural': 'Body参数',
            },
        ),
        migrations.CreateModel(
            name='QueryParamInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, verbose_name='参数名')),
                ('value', models.CharField(max_length=1024, verbose_name='参数值')),
                ('HttpRequest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.httprequest', verbose_name='URL参数')),
            ],
            options={
                'verbose_name': 'URL拼接参数',
                'verbose_name_plural': 'URL拼接参数',
            },
        ),
        migrations.AddField(
            model_name='httprequest',
            name='Product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.product', verbose_name='所属项目'),
        ),
        migrations.CreateModel(
            name='Header',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, verbose_name='请求头名称')),
                ('value', models.CharField(max_length=1024, verbose_name='请求头内容')),
                ('HeaderTemplate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.headertemplate', verbose_name='请求头模板')),
            ],
            options={
                'verbose_name': '请求头',
                'verbose_name_plural': '请求头',
            },
        ),
        migrations.CreateModel(
            name='ExtractOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.CharField(max_length=512, verbose_name='抽取项(jsonpath/正则)')),
                ('varname', models.CharField(max_length=128, verbose_name='变量名称')),
                ('desc', models.CharField(blank=True, max_length=512, null=True, verbose_name='备注')),
                ('ApiCaseStep', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.apicasestep', verbose_name='测试步骤')),
            ],
            options={
                'verbose_name': '数据驱动数据项',
                'verbose_name_plural': '数据驱动数据项',
            },
        ),
        migrations.CreateModel(
            name='EnvSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setname', models.CharField(max_length=64, verbose_name='配置项')),
                ('setvalue', models.CharField(max_length=200, verbose_name='配置值')),
                ('Env', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.env', verbose_name='环境')),
            ],
            options={
                'verbose_name': '环境变量',
                'verbose_name_plural': '环境变量',
            },
        ),
        migrations.CreateModel(
            name='DdtParams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setname', models.CharField(max_length=64, verbose_name='参数名')),
                ('setvalue', models.CharField(max_length=1024, verbose_name='参数值')),
                ('DdtData', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.ddtdata', verbose_name='数据驱动项')),
            ],
            options={
                'verbose_name': '数据驱动数据项',
                'verbose_name_plural': '数据驱动数据项',
            },
        ),
        migrations.CreateModel(
            name='Cookie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, verbose_name='参数名')),
                ('value', models.CharField(max_length=4096, verbose_name='参数值')),
                ('CookieTemplate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.cookietemplate', verbose_name='Cookie模板')),
            ],
            options={
                'verbose_name': 'Cookie信息',
                'verbose_name_plural': 'Cookie信息',
            },
        ),
        migrations.CreateModel(
            name='AssertOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('contains', '包含'), ('equals', '相同文本'), ('eq', '等于'), ('ne', '不等于'), ('lt', '小于'), ('le', '小于等于'), ('gt', '大于'), ('ge', '大于等于')], max_length=64, verbose_name='断言类型')),
                ('errorMsg', models.CharField(max_length=1024, verbose_name='断言提示')),
                ('target', models.CharField(max_length=1024, verbose_name='目标值')),
                ('value', models.CharField(max_length=1024, verbose_name='匹配值')),
                ('ApiCaseStep', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.apicasestep', verbose_name='测试步骤')),
            ],
            options={
                'verbose_name': '断言配置',
                'verbose_name_plural': '断言配置',
            },
        ),
        migrations.AddField(
            model_name='apicasestep',
            name='HttpRequest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.httprequest', verbose_name='请求接口'),
        ),
        migrations.AddField(
            model_name='apicase',
            name='Env',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.env', verbose_name='环境'),
        ),
    ]
